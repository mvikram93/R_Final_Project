install.packages("arrow")
library(tidyverse)
library(arrow)
data = read_parquet(file="data/cyber.csv")
data = read_parquet(file="data/cyber.parquet")
data = read_parquet(file="data/cyber.parquet")
View(data)
data = read_parquet(file="data/cyber.parquet")
View(data)
View(data)
glimpse(data)
library(ncdf4)
install.packages("ncdf4")
nc_data <- nc_open('data/ssi.nc')
source("D:/MSIS/581/Assignments/Projects/Final_Project/example.R", echo=TRUE)
climate_change
View(climate_change)
climate_change = read_csv("data/ghg-emissions.csv")
climate_change
source("D:/MSIS/581/Assignments/Projects/Final_Project/example.R", echo=TRUE)
coal_consumption_wide_to_longer <- climate_change %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
climate_change <- climate_change[,-2]
View(climate_change)
coal_consumption_wide_to_longer <- climate_change %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
coal_consumption_wide_to_longer[1,]
coal_consumption_wide_to_longer[1,]
climate_change[1,]
View(climate_change[1,])
Summary(climate_change[1,])
summarise(climate_change[1,])
glimpse(climate_change[1,])
climate_change <- climate_change[,-2] %>% as.character(climate[1,])
climate_change <- climate_change[,-2] %>% as.character(climate_change[1,])
climate_change <- as.character(climate_change[,-2])
View(as.character(climate_change))
climate_change <- climate_change[,-2]
source("D:/MSIS/581/Assignments/Projects/Final_Project/example.R", echo=TRUE)
View
View(as.character(climate_change))
climate_change <- climate_change[,-2]
#coal_consumption_wide_to_longer <- climate_change %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
View(as.character(climate_change))
climate_change
glimpse(climate_change)
#coal_consumption_wide_to_longer <- climate_change %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
View(as.character(climate_change))
as.character(climate_change)
#coal_consumption_wide_to_longer <- climate_change %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
View(lapply(climate_change,as.character))
glimpse(climate_change)
#coal_consumption_wide_to_longer <- climate_change %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
cli <- lapply(climate_change,as.character)
glimpse(cli)
source("D:/MSIS/581/Assignments/Projects/Final_Project/example.R", echo=TRUE)
coal_consumption_wide_to_longer <- cli %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
type(cli)
?pivot_longer
coal_consumption_wide_to_longer <- cli %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
cli <- as.matrix(lapply(climate_change,as.character) )
coal_consumption_wide_to_longer <- cli %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
is.data.frame(cli)
cli <- data.frame(lapply(climate_change,as.character) )
is.data.frame(cli)
coal_consumption_wide_to_longer <- cli %>% pivot_longer(!"Country/Region",names_to = "Year",values_to = "Range") %>% print()
glimpse(cli)
coal_consumption_wide_to_longer <- cli %>% pivot_longer(!"Country.Region",names_to = "Year",values_to = "Range") %>% print()
data_val <- cli %>% pivot_longer(!"Country.Region",names_to = "Year",values_to = "Range") %>% print()
str(data_val)
data_val <- cli %>% pivot_longer(!"Country.Region",names_to = "Year",values_to = "Range") %>% mutate(.,Range=as.numeric(Range))
str(data_val)
ggpairs(data=data_val, columns=1:3, title="trees data")
library(ggpairs)
install.packages("ggpairs")
library(ggpairs)
install.packages("scatterplot3d")
library(scatterplot3d)
ggpairs(data=data_val, columns=1:3, title="trees data")
install.packages("GGally")
library(GGally)
ggpairs(data=data_val, columns=1:3, title="trees data")
?ggpairs
ggpairs(data=data_val, columns=1:3, title="trees data",cardinality_threshold=51)
ggpairs(data=data_val, columns=1:3, title="trees data",cardinality_threshold=195)
fit_1 <- lm(Year ~ Range, data = trees)
install.packages("forcast")
install.packages("forecast")
data_val <- cli %>% pivot_longer(!"Country.Region",names_to = "Year",values_to = "Range") %>%
mutate(.,Range=as.numeric(Range)) %>% mutate(.,Year=as.factor(Year))
str(data_val)
ggpairs(data=data_val, columns=1:3, title="trees data",cardinality_threshold=195)
library(forecast)
time_series <- ts(data_val$Range,start = c(1960),frequency = 12)
print(time_series)
time_series <- ts(data_val$Range,start = c('China'),frequency = 61)
time_series <- ts(data_val$Range,start = c('China'),frequency = 61)
print(time_series)
time_series <- ts(data_val$Range,start = c(1960),frequency = 61)
print(time_series)
autoplot(time_series,xlab = "Year", ylab = "CO2 Emission")
time_series <- ts(data_val$Range,start = c(1960),frequency = 12)
autoplot(time_series,xlab = "Year", ylab = "CO2 Emission")
time_series <- ts(data_val$Range,start = c(1960),frequency = 3)
autoplot(time_series,xlab = "Year", ylab = "CO2 Emission")
?ts
time_series <- ts(data_val$Range,start = c(1960),end=c(2021),frequency = 3)
autoplot(time_series,xlab = "Year", ylab = "CO2 Emission")
time_series <- ts(data_val$Range,start = c(1960),end=c(2021),frequency = 12)
autoplot(time_series,xlab = "Year", ylab = "CO2 Emission")
summarise(data_val)
summary(data_val)
time_series <- ts(data_val$Range,start = c(1960),end=c(2021),frequency = 1)
autoplot(time_series,xlab = "Year", ylab = "CO2 Emission")
summary(data_val)
abline(reg=lm(Range~Year(Range)))
abline(reg=lm(time_series~Year(time_series)))
decomposed_data <- decompose(time_series,"multiplicative")
time_series <- ts(data_val$Range,start = c(1960),end=c(2021),frequency = 12)
decomposed_data <- decompose(time_series,"multiplicative")
abline(reg=lm(time_series~Year(time_series)))
print(decomposed_data)
plot(decomposed_data)
?abline
abline(reg=lm(time_series~time(time_series)))
print(time_series)
autoplot(time_series,xlab = "Year", ylab = "CO2 Emission")
abline(reg=lm(time_series~time(time_series)))
plot(time_series,xlab = "Year", ylab = "CO2 Emission")
abline(reg=lm(time_series~time(time_series)))
model <- auto.arima(time_series)
model
plot.ts(model$residuals)
forecast_vale <- forecast(model,level = c(95),h=10*12)
plot(forecast_vale)
?forecast
forecast_vale <- forecast(model,level = c(95),h=15*12)
plot(forecast_vale)
forecast_vale <- forecast(model,level = c(95),h=20*12)
plot(forecast_vale)
forecast_vale <- forecast(model,level = c(95),h=80*12)
plot(forecast_vale)
?forecast
forecast_vale <- forecast(model,level = c(95),h=80*1)
plot(forecast_vale)
forecast_vale <- forecast(model,level = c(95),h=80*12)
plot(forecast_vale)
time_series <- ts(data_val$Range,start = c(1960),end=c(2021),frequency = 1)
model <- auto.arima(time_series)
plot.ts(model$residuals)
forecast_vale <- forecast(model,level = c(95),h=80*12)
plot(forecast_vale)
forecast_vale <- forecast(model,level = c(95),h=80*1)
plot(forecast_vale)
Box.test(model$residuals,lag=5,type="Ljung-Box")
Box.test(model$residuals,lag=10,type="Ljung-Box")
Box.test(model$residuals,lag=15,type="Ljung-Box")
decomposed_data <- decompose(time_series,"multiplicative")
install.packages(pacman)
install.packages("pacman"")
MtCO2
exit
source("D:/MSIS/581/Assignments/Projects/Final_Project/Data_Cleaning_With_Visualization.R", echo=TRUE)
new_test <- data.frame(Population=10541000000,GhgInclLandForestry=45557.80961)
predict(regression,newdata = new_test)
aov_summary <- aov(formula = Temperature ~ Population + GhgInclLandForestry,data = world_data)
summary(aov_summary)
hist(aov_summary$residuals)
qqnorm(aov_summary$residuals)
qqline(aov_summary$residuals)
#Box Plot for Temperature (Outlier)
ggplot(temp_year_data,aes(x=Year,y=Temperature))+
geom_boxplot(outlier.size=5)
aov_summary <- aov(formula = Temperature ~ Population + GhgInclLandForestry,
data = world_data)
aov_summary <- aov(formula = Temperature ~ Population + GhgInclLandForestry,
data = world_data)
summary(aov_summary)
hist(aov_summary$residuals)
qqline(aov_summary$residuals)
qqnorm(aov_summary$residuals)
qqline(aov_summary$residuals)
hist(aov_summary$residuals)
summary(aov_summary)
summarise(aov_summary)
summarise(regression)
pacman::p_load(magrittr,
pacman,
rio,
agricolae,
tidyverse,
corrplot,
formattable,
forecast,
caTools,
ggplot2,
psych,
outliers,
PerformanceAnalytics)
HSD.test(aov_summary,"Population + GhgInclLandForestry", group = FALSE)$comparison
HSD.test(aov_summary,"Population", group = FALSE)$comparison
corrplot(corr_plot_values,
type = "upper",
order = "hclust",
tl.col = "black",
tl.srt = 45)
?format_value
??format_value
format_value <- function(data_v){
formattable(data_v,format="f",digits=2)
}
?format_value
predict(regression,newdata = new_test)
# Forecasting
time_series_forecasting <- ts(world_data,frequency = 1,start = c("1990"))
time_series_forecasting
# Forecasting
time_series_forecasting <- ts(world_data$Population,frequency = 1,start = c("1990"))
time_series_forecasting
model <- auto.arima(time_series,trace = TRUE)
# Loading the packages
pacman::p_load(magrittr,
pacman,
forecast,
rio,
agricolae,
tidyverse,
corrplot,
formattable,
forecast,
caTools,
ggplot2,
psych,
outliers,
PerformanceAnalytics)
model <- auto.arima(time_series,trace = TRUE)
model <- auto.arima(time_series_forecasting,trace = TRUE)
plot.ts(model$residuals)
forecast_vale <- forecast(model,level = c(95),h=10)
print(forecast_vale)
summary(forecast_vale)
autoplot(forecast_vale)
population_forecasting <- forecast(model,level = c(95),h=100)
summary(forecast_vale)
population_forecasting <- forecast(model,level = c(95),h=10*12)
summary(forecast_vale)
autoplot(forecast_vale)
?autoplot
population_forecasting <- forecast(model,level = c(95),h=100)
summary(forecast_vale)
autoplot(forecast_vale)
time_series_data |>
tk_tbl() |>
bind_rows(population_forecasting) |>
ggplot(aes(index, value)) +
geom_line() +
geom_point(shape = 21) +
geom_ribbon(aes(ymin = `Lo 95`, ymax = `Hi 95`), fill = "grey80") +
geom_point(aes(y = `Point Forecast`), colour = "blue") +
labs(title = "Forecast (95%)")
# Loading the packages
pacman::p_load(magrittr,
pacman,
forecast,
rio,
agricolae,
tidyverse,
timetk,
corrplot,
formattable,
forecast,
caTools,
ggplot2,
psych,
outliers,
PerformanceAnalytics)
time_series_data |>
tk_tbl() |>
bind_rows(population_forecasting) |>
ggplot(aes(index, value)) +
geom_line() +
geom_point(shape = 21) +
geom_ribbon(aes(ymin = `Lo 95`, ymax = `Hi 95`), fill = "grey80") +
geom_point(aes(y = `Point Forecast`), colour = "blue") +
labs(title = "Forecast (95%)")
install.packages("timetk")
# Loading the packages
pacman::p_load(magrittr,
pacman,
forecast,
rio,
agricolae,
tidyverse,
timetk,
corrplot,
formattable,
forecast,
caTools,
ggplot2,
psych,
outliers,
PerformanceAnalytics)
library(timetk)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(timetk)
install.packages("installr")
updateR()
library(installr)
updateR()
library(timetk)
updateR()
update.packages(checkBuilt=TRUE)
library(timetk)
updateR()
install.packages("installr")
updateR()
library(installr)
updateR()
updateR()
library(timetk)
help()
r()
updateR()
